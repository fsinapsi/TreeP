
(defstart testvlfeat)

(defnet save-gss (filt)
        (deflocal pix level)

        (for level in 0 .. (- (vl-sift-get-nlevels filt) 1) do
                (set pix (vl-sift-get-gss filt level))
                (pixp pix)
                (pix-save-png pix (+ "gss_" (vl-sift-get-octave-index filt) "_" level ".png"))
                (close pix) ))

(defnet testsift ()
        (deflocal pix filt first)

        (print nl
               "libvl version: " (vl-version) nl )

        (set pix (pix-load "pics/heckert_gnu.small.png"))
        (pixp pix)

        (set filt (vl-sift-new (width pix) (height pix) -1 3 -1))
        (<> filt undef)

        (print nl
               "filter settings" nl
               "===============" nl
               nl
               "octaves = " (vl-sift-get-noctaves filt) nl
               "levels = " (vl-sift-get-nlevels filt) nl
               "first octave = " (vl-sift-get-octave-first filt) nl
               "edge threshold = " (vl-sift-get-edge-thresh filt) nl
               "peak threshold = " (vl-sift-get-peak-thresh filt) nl
               "magnif = " (vl-sift-get-magnif filt) nl
               nl )

        (set first true)

        (opt*   (if first
                then    (set first false)
                        (vl-sift-process-first-octave filt pix)
                else    (vl-sift-process-next-octave filt) )
                (print "GSS octave " (vl-sift-get-octave-index filt) " computed" nl)
                (save-gss filt) )
        (close pix filt) )

(defnet testvlfeat ()
        (testsift) )

