
(include "common.tin")

(defstart fractal-tree)

(defglobal _img)

(defnet init-global ()
        (set _img (array 0))
        (array-append _img (pix-load-static "pics/tree00.png"))
        (array-append _img (pix-load-static "pics/tree01.png"))
        (array-append _img (pix-load-static "pics/tree02.png"))
        (array-append _img (pix-load-static "pics/tree03.png"))
        (array-append _img (pix-load-static "pics/tree04.png"))
        (array-append _img (pix-load-static "pics/tree05.png"))
        (array-append _img (pix-load-static "pics/tree06.png"))
        (array-append _img (pix-load-static "pics/tree07.png"))
        (array-append _img (pix-load-static "pics/tree08.png"))
        (array-append _img (pix-load-static "pics/tree09.png"))
        (array-append _img (pix-load-static "pics/tree10.png"))
        (array-append _img (pix-load-static "pics/tree11.png"))
        (array-append _img 1)
        (array-append _img 0) )

(defnet fractal-tree ()
        (deflocal dlg timer)

        (init-global)

        (set dlg (iup-dialog (gui-setup-main)))
        (iup-set-attribute-handle undef "PARENTDIALOG" dlg)
        (iup-set-str-attribute dlg "TITLE" "A Fractal TreeP")
        (iup-set-callback dlg "CLOSE_CB" (netptr gui-close))
        ;(iup-set-callback dlg "K_ANY" (netptr gui-kb-cb))
        (iup-set-bool dlg "FULLSCREEN" false)

        (iup-show dlg)

        (set timer (iup-timer))
        (iup-set-callback timer "ACTION_CB" (netptr gui-idle-cb))
        (iup-set-int timer "TIME" 100)
        (iup-set-bool timer "RUN" true)

        (iup-main-loop)

        (iup-set-bool timer "RUN" false)
        (close timer dlg) )

(defnet gui-close (self)
        (fail) )

(defun gui-setup-main () net gui-setup-main)
(defnet gui-setup-main (@wid)
        (deflocal img)

        (set @wid (iup-label))
        (iup-set-callback @wid "BUTTON_CB" (netptr gui-button-cb))
        (array-append _img @wid)
        (set img (iup-image-rgba <_img 0>))
        (array-append _img img)
        (iup-set-attribute-handle @wid "IMAGE" img) )

(defnet gui-idle-cb (self)
        (deflocal img)

        (set <_img 13> (% (+ <_img 13> <_img 12>) 12))
        (set img (iup-image-rgba <_img <_img 13>>))
        (iup-set-attribute-handle <_img 14> "IMAGE" img)
        (close <_img 15>)
        (set <_img 15> img) )

(defnet gui-button-cb (self btn prs x y status)
        (opt    (= btn 49)
                (= prs 1)
                (set <_img 12> -<_img 12>) ))

